{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAIMA,EACA,mCADAA,EAED,2CAiEUC,MA/Df,WAEE,MAAsBC,mBAAS,IAA/B,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAA0BF,mBAAS,IAAnC,mBAAMG,EAAN,KAAcC,EAAd,KA0BA,OACE,qBAAKC,UAAmC,oBAAhBF,EAAQG,MAAyBH,EAAQG,KAAKC,MAAQ,GAAM,WAAsB,MAA1G,SACF,iCACG,qBAAKF,UAAU,aAAf,SACC,uBAAOG,KAAM,OACbH,UAAU,aACVI,YAAY,WACdC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QACzBA,MAAOZ,EACPa,WAlCG,SAAAC,GACC,SAATA,EAAIC,KAERC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACzDoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WA4BY,oBAAhBlB,EAAQG,KACnB,gCACA,sBAAKD,UAAU,eAAf,UACA,sBAAKA,UAAU,WAAf,UAA2BF,EAAQqB,KAAnC,IAA0CrB,EAAQsB,IAAIC,WAEtD,qBAAKrB,UAAU,OAAf,SA3BoB,SAACsB,GACnB,IAGIC,EAFO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKzGL,EAAEM,YACjBC,EAAMP,EAAEQ,cAEZ,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAkBbE,CAAY,IAAIC,WAExC,sBAAKhC,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UACCiC,KAAKC,MAAMpC,EAAQG,KAAKC,MADzB,WAIA,qBAAKF,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,aAGnC,SCnDEkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,K","file":"static/js/main.f3820f4a.chunk.js","sourcesContent":["import React,{useState} from 'react';\n\nimport react from \"react\";\n\nconst api={\n  key:\"4da9dec1a746076352dc17b13017c20b\",\nbase:\"https://api.openweathermap.org/data/2.5/\"\n}\nfunction App() \n{\n  const[query,setQuery]=useState('');\n  const[weather,setWeather]=useState('');\n  const search=evt=>{\n    if(evt.key==\"Enter\")\n {\n   fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n   .then(res => res.json())\n   .then(result => {\n     setWeather(result);\n     setQuery('');\n     console.log(result);\n   });\n}\n}\n\n  \n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n \n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year= d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp >= 16) ? 'app warm' : 'app') : 'app'}>\n  <main> \n     <div className=\"search-box\">\n      <input type =\"text\"\n      className=\"search-bar\" \n      placeholder=\"search..\" \n    onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}/> \n    </div>\n    {(typeof weather.main != \"undefined\") ? (\n  <div> \n  <div className=\"location-box\">\n  <div className=\"location\">{weather.name},{weather.sys.country}</div>\n     \n  <div className=\"date\">{dateBuilder(new Date())}</div>\n   </div>\n <div className=\"weather-box\">\n   <div className=\"temp\">\n   {Math.round(weather.main.temp)}Â°c\n   \n </div>\n   <div className=\"weather\">{weather.weather[0].main}</div>\n   </div>\n   </div>\n        ) : ('')}\n  \n    </main>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}